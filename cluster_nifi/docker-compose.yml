version: '3.9'

x-user: &user nifi_admin
x-pwd: &pwd SuperPuperSecretPass777

x-nifi-base: &nifi-base
  build: .
  networks:
    - nifi

x-nifi-toolkit-base: &nifi-toolkit-base
  image: apache/nifi-toolkit:1.16.2
  networks:
    - nifi

x-nifi-environment: &nifi-environment
  NIFI_WEB_HTTPS_PORT: 8445
  NIFI_CLUSTER_IS_NODE: "true"
  NIFI_ZK_CONNECT_STRING: "zookeeper:2181"
  NIFI_ELECTION_MAX_WAIT: "30 sec"
  NIFI_ELECTION_MAX_CANDIDATES: 1
  NIFI_SENSITIVE_PROPS_KEY: "my-random-string"
  NIFI_CLUSTER_NODE_PROTOCOL_PORT: 8082
  NIFI_WEB_PROXY_HOST: "10.91.8.5:8445,10.91.8.5:8080,10.50.3.5:8445,nifi2:8445,nifi2,nifi3:8445,nifi3,10.50.3.5:8080,nifi0:8445,nifi0,nifi1:8445,nifi1,localhost:8080"
  SINGLE_USER_CREDENTIALS_USERNAME: *user
  SINGLE_USER_CREDENTIALS_PASSWORD: *pwd
  NIFI_SECURITY_USER_AUTHORIZER: "single-user-authorizer"
  NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER: "single-user-provider"
  INITIAL_ADMIN_IDENTITY: *user
  AUTH: "tls"
  KEYSTORE_TYPE: "JKS"
  KEYSTORE_PASSWORD: supersecretkeystore
  TRUSTSTORE_TYPE: "JKS"
  TRUSTSTORE_PASSWORD: supersecrettruststore
services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.8.0
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - nifi

  nifi-toolkit:
    <<: *nifi-toolkit-base
    container_name: nifi-toolkit
    volumes:
      - nifi_certs:/opt/certs
    user: root
    entrypoint: ["bash", "-c", "/opt/nifi-toolkit/*/bin/tls-toolkit.sh standalone -o /opt/certs -n nifi[0-3] -P supersecrettruststore -K supersecretkeystore -S supersecretkeystore; chown -R nifi:nifi /opt/certs"]
  proxy:
    image: nginx:latest
    container_name: proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8445:8445"
    networks:
      - nifi
    depends_on:
      - nifi0
      - nifi1
      - nifi2
      - nifi3

  nifi0:
    <<: *nifi-base
    container_name: nifi0
    depends_on:
      nifi-toolkit:
        condition: service_completed_successfully
    volumes:
      - nifi_certs:/opt/certs
      - nifi0_conf:/opt/nifi/nifi-current/conf
      - nifi0_extensions:/opt/nifi/nifi-current/extensions
      - nifi0_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi0_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi0_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi0_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi0_state:/opt/nifi/nifi-current/state
      - nifi0_logs:/opt/nifi/nifi-current/logs
      - /home/delta/external/:/home/delta/external
      - /abc/:/abc
      - /opt/microsoft/:/opt/microsoft
      - /etc/odbcinst.ini:/etc/odbcinst.ini
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: "nifi0"
      NIFI_WEB_HTTPS_HOST: "nifi0"
      KEYSTORE_PATH: "/opt/certs/nifi0/keystore.jks"
      TRUSTSTORE_PATH: "/opt/certs/nifi0/truststore.jks"
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi0 (v1.16.2)/' conf/nifi.properties; ../scripts/start.sh"

  nifi1:
    <<: *nifi-base
    container_name: nifi1
    depends_on:
      nifi-toolkit:
        condition: service_completed_successfully
    volumes:
      - nifi_certs:/opt/certs
      - nifi1_conf:/opt/nifi/nifi-current/conf
      - nifi1_extensions:/opt/nifi/nifi-current/extensions
      - nifi1_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi1_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi1_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi1_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi1_state:/opt/nifi/nifi-current/state
      - nifi1_logs:/opt/nifi/nifi-current/logsi
      - /home/delta/external/:/home/delta/external
      - /abc/:/abc
      - /opt/microsoft/:/opt/microsoft
      - /etc/odbcinst.ini:/etc/odbcinst.ini
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: "nifi1"
      NIFI_WEB_HTTPS_HOST: "nifi1"
      KEYSTORE_PATH: "/opt/certs/nifi1/keystore.jks"
      TRUSTSTORE_PATH: "/opt/certs/nifi1/truststore.jks"
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi1 (v1.16.2)/' conf/nifi.properties; ../scripts/start.sh"

  nifi2:
    <<: *nifi-base
    container_name: nifi2
    depends_on:
      nifi-toolkit:
        condition: service_completed_successfully
    volumes:
      - nifi_certs:/opt/certs
      - nifi2_conf:/opt/nifi/nifi-current/conf
      - nifi2_extensions:/opt/nifi/nifi-current/extensions
      - nifi2_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi2_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi2_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi2_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi2_state:/opt/nifi/nifi-current/state
      - nifi2_logs:/opt/nifi/nifi-current/logs
      - /home/delta/external/:/home/delta/external
      - /abc/:/abc
      - /opt/microsoft/:/opt/microsoft
      - /etc/odbcinst.ini:/etc/odbcinst.ini
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: "nifi2"
      NIFI_WEB_HTTPS_HOST: "nifi2"
      KEYSTORE_PATH: "/opt/certs/nifi2/keystore.jks"
      TRUSTSTORE_PATH: "/opt/certs/nifi2/truststore.jks"
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi2 (v1.16.2)/' conf/nifi.properties; ../scripts/start.sh"

  nifi3:
    <<: *nifi-base
    container_name: nifi3
    depends_on:
      nifi-toolkit:
        condition: service_completed_successfully
    volumes:
      - nifi_certs:/opt/certs
      - nifi3_conf:/opt/nifi/nifi-current/conf
      - nifi3_extensions:/opt/nifi/nifi-current/extensions
      - nifi3_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi3_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi3_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi3_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi3_state:/opt/nifi/nifi-current/state
      - nifi3_logs:/opt/nifi/nifi-current/logs
      - /home/delta/external/:/home/delta/external
      - /abc/:/abc
      - /opt/microsoft/:/opt/microsoft
      - /etc/odbcinst.ini:/etc/odbcinst.ini
    environment:
      <<: *nifi-environment
      NIFI_CLUSTER_ADDRESS: "nifi3"
      NIFI_WEB_HTTPS_HOST: "nifi3"
      KEYSTORE_PATH: "/opt/certs/nifi3/keystore.jks"
      TRUSTSTORE_PATH: "/opt/certs/nifi3/truststore.jks"
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "sed -i 's/nifi.ui.banner.text=.*/nifi.ui.banner.text=nifi3 (v1.16.2)/' conf/nifi.properties; ../scripts/start.sh"

networks:
  nifi:
    driver: bridge

volumes:
  nifi_certs:
  # nifi 0
  nifi0_conf:
  nifi0_extensions:
  nifi0_database_repository:
  nifi0_flowfile_repository:
  nifi0_content_repository:
  nifi0_provenance_repository:
  nifi0_state:
  nifi0_logs:
  # nifi 1
  nifi1_conf:
  nifi1_extensions:
  nifi1_database_repository:
  nifi1_flowfile_repository:
  nifi1_content_repository:
  nifi1_provenance_repository:
  nifi1_state:
  nifi1_logs:
  # nifi 2
  nifi2_conf:
  nifi2_extensions:
  nifi2_database_repository:
  nifi2_flowfile_repository:
  nifi2_content_repository:
  nifi2_provenance_repository:
  nifi2_state:
  nifi2_logs:
  # nifi 3
  nifi3_conf:
  nifi3_extensions:
  nifi3_database_repository:
  nifi3_flowfile_repository:
  nifi3_content_repository:
  nifi3_provenance_repository:
  nifi3_state:
  nifi3_logs:
